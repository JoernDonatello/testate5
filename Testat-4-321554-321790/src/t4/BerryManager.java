package t4;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static t4.HelperManager.jTable1;
import static t4.HelperManager.myHelpers;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Nutzer
 */
public class BerryManager extends javax.swing.JFrame {

    DefaultTableModel model;
    private int berryID, weight;
    private String berrytyp, color;

    static BerryManager myBerryManager = new BerryManager();
    static ArrayList<BerryManager> myBerry = new ArrayList<>();

    public BerryManager() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        hinzufuegen();
    }

    public BerryManager(int id, String berrytyp, int weight, String color) {
        this.berryID = id;
        this.berrytyp = berrytyp;
        this.weight = weight;
        this.color = color;
    }

    public int getBerryID() {
        return berryID;
    }

    public void setBerryID(int berryID) {
        this.berryID = berryID;
    }

    public int getWeight() {
        return weight;
    }

    public void setWeight(int weight) {
        this.weight = weight;
    }

    public String getBerrytyp() {
        return berrytyp;
    }

    public void setBerrytyp(String berrytyp) {
        this.berrytyp = berrytyp;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jWarningBerry = new javax.swing.JLabel();
        cbFilter = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        saveBerry = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Create a new berry");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1createHelper(evt);
            }
        });

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4deleteBerry(evt);
            }
        });

        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jWarningBerry.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jWarningBerry.setForeground(new java.awt.Color(255, 51, 51));

        cbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all", "red", "yellow", "brown", "green", "pink" }));
        cbFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFiltershowFilter(evt);
            }
        });

        jLabel1.setText("Set Filter:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Double-click to update!");

        saveBerry.setText("SAVE");
        saveBerry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBerryActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Berry ID", "Berrytype", "Colour", "Weight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbFilter, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jWarningBerry, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                        .addComponent(saveBerry)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton1)
                        .addGap(36, 36, 36)
                        .addComponent(jButton4)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jWarningBerry, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveBerry))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1createHelper(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1createHelper
        this.setVisible(false);
        CreateBerry createwindow = new CreateBerry();
        createwindow.setVisible(true);
    }//GEN-LAST:event_jButton1createHelper

    

      public void hinzufuegen()
{
    try {
        
    for (BerryManager i : myBerry) {
        model.insertRow(model.getRowCount(), new Object[]{i.getBerryID(),i.getBerrytyp(),i.getColor(),i.getWeight()});
    }
        
    } catch (Exception e) {
    }
}
    private void jButton4deleteBerry(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4deleteBerry
        jWarningBerry.setText("");
        if (jTable1.getModel().getRowCount() == 0) {
            jWarningBerry.setText("Please first create a Berry!");
        } else {
            try {
                int selectedIndex = jTable1.getSelectedRow();
                
                if (selectedIndex != -1) {
                    int dialogButton = JOptionPane.YES_NO_OPTION;
                    int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure?", "Warning", dialogButton);
                    if (dialogResult == 0) {
                       
                        myBerry.remove(selectedIndex);
                    }
                } else {
                    jWarningBerry.setText("Please select first, then delete!");
                }
            } catch (Exception e) {
                jWarningBerry.setText("There must be a Berry!");
            }
        }
    }//GEN-LAST:event_jButton4deleteBerry

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.setVisible(false);
        BasicData home = new BasicData();
        home.setVisible(true);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void cbFiltershowFilter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFiltershowFilter
        String select = cbFilter.getSelectedItem().toString();
        try {
            model.setRowCount(0);
            for (BerryManager i : myBerry) {
                switch (select) {

                    case "brown":
                        if (i.getColor() == "brown") {
                            model.insertRow(model.getRowCount(), new Object[]{i.getBerryID(),i.getBerrytyp(),i.getWeight(),i.getColor()});
                        }
                        break;
                    case "green":
                        if (i.getColor() == "green") {
                             model.insertRow(model.getRowCount(), new Object[]{i.getBerryID(),i.getBerrytyp(),i.getWeight(),i.getColor()});
                        }
                        break;
                    case "yellow":
                        if (i.getColor() == "yellow") {
                             model.insertRow(model.getRowCount(), new Object[]{i.getBerryID(),i.getBerrytyp(),i.getWeight(),i.getColor()});
                        }
                        break;
                    case "red":
                        if (i.getColor() == "red") {
                              model.insertRow(model.getRowCount(), new Object[]{i.getBerryID(),i.getBerrytyp(),i.getWeight(),i.getColor()});
                        }
                        break;
                    case "all":
                          model.insertRow(model.getRowCount(), new Object[]{i.getBerryID(),i.getBerrytyp(),i.getWeight(),i.getColor()});
                        break;
                
                    case "pink": 
                         if (i.getColor() == "pink"){
                          model.insertRow(model.getRowCount(), new Object[]{i.getBerryID(),i.getBerrytyp(),i.getWeight(),i.getColor()});
                        break;  
                         }
                }
            }
      
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbFiltershowFilter

    private void saveBerryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBerryActionPerformed
        // TODO add your handling code here:
          jWarningBerry.setText("");
           
        myBerry.clear();
        int row = jTable1.getRowCount ();
        for (int i = 0; i<row; i++) {
            this.myBerry.add(new BerryManager (Integer.parseInt(model.getValueAt(i, 0).toString()), model.getValueAt(i, 1).toString(), Integer.parseInt(model.getValueAt(i, 2).toString()), model.getValueAt(i, 3).toString()));    
        }
            
              
                
        this.setVisible(false);
        BerryManager home = new BerryManager();
        home.setVisible(true);
    }//GEN-LAST:event_saveBerryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BerryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BerryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BerryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BerryManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BerryManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbFilter;
    public static javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel jWarningBerry;
    private javax.swing.JButton saveBerry;
    // End of variables declaration//GEN-END:variables
}
